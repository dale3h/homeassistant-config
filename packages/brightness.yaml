################################################################
## Sensor / Time Based Brightness
################################################################

# @todo Automation for setting light brightness when global changes
# @todo Add individual light brightnesses
# @todo Is there a way to implement machine learning for individual lights?

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'brightness'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Automation
    ################################################

    automation.update_global_brightness:
      <<: *customize
      friendly_name: "Update Global Brightness"

    ################################################
    ## Input Number
    ################################################

    input_number.global_brightness:
      <<: *customize
      friendly_name: "Global Brightness"

    input_number.nightlight_brightness:
      <<: *customize
      friendly_name: "Nightlight Brightness"

    ################################################
    ## Sensor
    ################################################

    sensor.global_brightness:
      <<: *customize
      friendly_name: "Global Brightness"
      hidden: true

################################################
## Automation
################################################

automation:
  - alias: update_global_brightness
    trigger:
      - platform: time
        hours: '/1'
        minutes: '00'
        seconds: '00'
    action:
      - service: input_number.select_value
        data_template:
          entity_id: input_number.global_brightness
          value: >-
            {% set brightness = {
              0: 64,
              1: 64,
              2: 64,
              3: 64,
              4: 64,
              5: 64,
              6: 64,
              7: 128,
              8: 192,
              9: 255,
              10: 255,
              11: 255,
              12: 255,
              13: 255,
              14: 255,
              15: 255,
              16: 255,
              17: 255,
              18: 255,
              19: 255,
              20: 192,
              21: 128,
              22: 64,
              23: 64,
            } %}
            {{ brightness[now().hour]|default(255) }}

################################################
## Input Slider
################################################

input_number:
  global_brightness:
    initial: 255
    min: 0
    max: 255
    step: 1

  nightlight_brightness:
    initial: 32
    min: 0
    max: 255
    step: 16

################################################
## Sensor
################################################

sensor:
  - platform: template
    sensors:
      global_brightness:
        value_template: >-
          {% set time_now = states('sensor.time').replace(':', '.')|float %}
          {% if time_now < 7 %}
            64
          {% elif time_now < 8 %}
            128
          {% elif time_now < 9 %}
            192
          {% elif time_now < 20 %}
            255
          {% elif time_now < 21 %}
            192
          {% elif time_now < 22 %}
            128
          {% else %}
            64
          {% endif %}
